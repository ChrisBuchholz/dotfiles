export PATH=/usr/local/bin:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/Gophings/bin:$PATH
export PATH=$HOME/.gem/ruby/*/bin:$PATH
export PATH=$HOME/.cabal/bin:$PATH
export PATH=$HOME/Library/Haskell/bin:$PATH
export PATH=$(brew --prefix)/lib/pythonX.Y/site-packages:$PATH
export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.3/bin
export GOPATH=$HOME/Gophings:$GOPATH
export GOBIN=$HOME/Gophings/bin
export MANPATH=$HOMEBREWDIR/share/man:$MANPATH
export MANPATH=$HOMEBREWDIR/share/man:$MANPATH

export TERM=xterm-256color
export DISABLE_AUTO_TITLE=true


# Functions -------------------------------------------------------------------

# create tags file with ctags
maketags() {
    ctags -f .tags -R *
}

# create tags file with hothasktags
makehaskelltags() {
    hasktags -c -o .tags .
}

fixxcode () {
    rm -frd ~/Library/Developer/Xcode/DerivedData/*
    rm -frd ~/Library/Caches/com.apple.dt.Xcode/*
}
# open man pages in Preview.app
pman () {
    man -t $1 | open -f -a /Applications/Preview.app
}

rmount () {
    #
    # requires osxfuse, sshfs and ssh-copy-id and that you have keyless
    # ssh login set up between you and the remote
    #
    # usage:
    #   rmount 99.99.99.99 /some/path
    #
    # if you leave out the path it defaults to ./ (home folder)
    #
    REMOTE_HOST=$1
    REMOTE_PATH=$2
    MOUNT_PATH=/Volumes/$REMOTE_HOST
    if [ -z "$2" ]; then
        REMOTE_PATH=./
    fi
    [ -d $MOUNT_PATH ] || mkdir $MOUNT_PATH
    sshfs -o reconnect -o volname=$REMOTE_HOST -o IdentityFile=~/.ssh/id_rsa $REMOTE_HOST:$REMOTE_PATH $MOUNT_PATH && open $MOUNT_PATH
}


# Aliases ---------------------------------------------------------------------


alias ql='qlmanage -p 2>/dev/null' # quicklook
alias brewup='brew update && brew upgrade'


# Antigen ---------------------------------------------------------------------


antigen bundle brew
antigen bundle osx
